"use strict";(self.webpackChunkdoc_site=self.webpackChunkdoc_site||[]).push([[451],{6804:(e,n,t)=>{t.r(n),t.d(n,{assets:()=>c,contentTitle:()=>o,default:()=>u,frontMatter:()=>i,metadata:()=>s,toc:()=>d});var r=t(5893),a=t(1151);const i={slug:"cuda101",title:"CUDA-101",sidebar_position:2,authors:{name:"Joyen Benitto",title:"CUDA101",url:"https://github.com/JoyenBenitto",image_url:"https://avatars.githubusercontent.com/u/75515758?v=4"},tags:["cuda","index"]},o="Index",s={id:"CUDA101/cuda101",title:"CUDA-101",description:"CUDA Programming Model",source:"@site/docs/CUDA101/cuda101.md",sourceDirName:"CUDA101",slug:"/CUDA101/cuda101",permalink:"/docs/CUDA101/cuda101",draft:!1,unlisted:!1,editUrl:"https://github.com/facebook/docusaurus/tree/main/packages/create-docusaurus/templates/shared/docs/CUDA101/cuda101.md",tags:[{label:"cuda",permalink:"/docs/tags/cuda"},{label:"index",permalink:"/docs/tags/index"}],version:"current",sidebarPosition:2,frontMatter:{slug:"cuda101",title:"CUDA-101",sidebar_position:2,authors:{name:"Joyen Benitto",title:"CUDA101",url:"https://github.com/JoyenBenitto",image_url:"https://avatars.githubusercontent.com/u/75515758?v=4"},tags:["cuda","index"]},sidebar:"tutorialSidebar",next:{title:"CUDA-Programming",permalink:"/docs/CUDA101/cuda-programming"}},c={},d=[{value:"CUDA Programming Model",id:"cuda-programming-model",level:2}];function l(e){const n={a:"a",h1:"h1",h2:"h2",li:"li",ul:"ul",...(0,a.a)(),...e.components};return(0,r.jsxs)(r.Fragment,{children:[(0,r.jsx)(n.h1,{id:"index",children:"Index"}),"\n",(0,r.jsx)(n.h2,{id:"cuda-programming-model",children:"CUDA Programming Model"}),"\n",(0,r.jsxs)(n.ul,{children:["\n",(0,r.jsx)(n.li,{children:(0,r.jsx)(n.a,{href:"./cuda-programming",children:"CUDA Programming"})}),"\n",(0,r.jsx)(n.li,{children:(0,r.jsx)(n.a,{href:"./Organization-of-thread-in-a-CUDA-program-Part-1",children:"Organization of thread in a CUDA program Part-1"})}),"\n",(0,r.jsx)(n.li,{children:(0,r.jsx)(n.a,{href:"./Organization-of-thread-in-a-CUDA-program-Part-2",children:"Organization of thread in a CUDA program Part-2"})}),"\n",(0,r.jsx)(n.li,{children:(0,r.jsx)(n.a,{href:"./Unique_index-Part-1",children:"Unique index calculation part-1"})}),"\n",(0,r.jsx)(n.li,{children:(0,r.jsx)(n.a,{href:"./Unique_index-Part-2",children:"Unique index calculation part-2"})}),"\n",(0,r.jsx)(n.li,{children:(0,r.jsx)(n.a,{href:"./Memory-transfer-between-host-and-device",children:"Memory transfer between host and device"})}),"\n",(0,r.jsx)(n.li,{children:(0,r.jsx)(n.a,{href:"./Device-Properties",children:"Device Properties"})}),"\n"]})]})}function u(e={}){const{wrapper:n}={...(0,a.a)(),...e.components};return n?(0,r.jsx)(n,{...e,children:(0,r.jsx)(l,{...e})}):l(e)}},1151:(e,n,t)=>{t.d(n,{Z:()=>s,a:()=>o});var r=t(7294);const a={},i=r.createContext(a);function o(e){const n=r.useContext(i);return r.useMemo((function(){return"function"==typeof e?e(n):{...n,...e}}),[n,e])}function s(e){let n;return n=e.disableParentContext?"function"==typeof e.components?e.components(a):e.components||a:o(e.components),r.createElement(i.Provider,{value:n},e.children)}}}]);