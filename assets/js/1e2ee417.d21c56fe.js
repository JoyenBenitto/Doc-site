"use strict";(self.webpackChunkdoc_site=self.webpackChunkdoc_site||[]).push([[244],{8165:(e,d,n)=>{n.r(d),n.d(d,{assets:()=>c,contentTitle:()=>t,default:()=>x,frontMatter:()=>s,metadata:()=>l,toc:()=>h});var i=n(5893),r=n(1151);const s={slug:"Organization-of-thread-in-a-CUDA-program-Part-2",title:"Organization of thread in a CUDA program Part-2",sidebar_position:5,authors:{name:"Joyen Benitto",title:"Organization of thread in a CUDA program Part-2",url:"https://github.com/JoyenBenitto",image_url:"https://avatars.githubusercontent.com/u/75515758?v=4"},tags:["cuda","index"]},t=void 0,l={id:"CUDA101/Organization_of_threads_p2",title:"Organization of thread in a CUDA program Part-2",description:"BlockIdx",source:"@site/docs/CUDA101/Organization_of_threads_p2.md",sourceDirName:"CUDA101",slug:"/CUDA101/Organization-of-thread-in-a-CUDA-program-Part-2",permalink:"/docs/CUDA101/Organization-of-thread-in-a-CUDA-program-Part-2",draft:!1,unlisted:!1,editUrl:"https://github.com/facebook/docusaurus/tree/main/packages/create-docusaurus/templates/shared/docs/CUDA101/Organization_of_threads_p2.md",tags:[{label:"cuda",permalink:"/docs/tags/cuda"},{label:"index",permalink:"/docs/tags/index"}],version:"current",sidebarPosition:5,frontMatter:{slug:"Organization-of-thread-in-a-CUDA-program-Part-2",title:"Organization of thread in a CUDA program Part-2",sidebar_position:5,authors:{name:"Joyen Benitto",title:"Organization of thread in a CUDA program Part-2",url:"https://github.com/JoyenBenitto",image_url:"https://avatars.githubusercontent.com/u/75515758?v=4"},tags:["cuda","index"]},sidebar:"tutorialSidebar",previous:{title:"Organization of thread in a CUDA program Part-1",permalink:"/docs/CUDA101/Organization-of-thread-in-a-CUDA-program-Part-1"},next:{title:"Unique index calculation part-1",permalink:"/docs/CUDA101/Unique_index-Part-1"}},c={},h=[{value:"BlockIdx",id:"blockidx",level:2},{value:"blockDim",id:"blockdim",level:2},{value:"gridDim",id:"griddim",level:2},{value:"Example Exercise",id:"example-exercise",level:2}];function a(e){const d={code:"code",h2:"h2",img:"img",li:"li",p:"p",pre:"pre",strong:"strong",table:"table",tbody:"tbody",td:"td",th:"th",thead:"thead",tr:"tr",ul:"ul",...(0,r.a)(),...e.components};return(0,i.jsxs)(i.Fragment,{children:[(0,i.jsx)(d.h2,{id:"blockidx",children:"BlockIdx"}),"\n",(0,i.jsxs)(d.ul,{children:["\n",(0,i.jsx)(d.li,{children:"In this page we will understand the use of blockIdx variable."}),"\n",(0,i.jsx)(d.li,{children:"CUDA runtime uniquely initialized blockIdx variable for each thread depending on the coordinates of the belonging thread block in the grid."}),"\n",(0,i.jsx)(d.li,{children:"blockIdx is a #dim3 type variable"}),"\n"]}),"\n",(0,i.jsxs)(d.p,{children:[(0,i.jsx)(d.strong,{children:"Example-1:"})," Consider a 1-D grid with 8 threads and 2 blocks"]}),"\n",(0,i.jsx)(d.p,{children:(0,i.jsx)(d.img,{alt:"blockIdx_example1.png",src:n(5857).Z+"",width:"399",height:"99"})}),"\n",(0,i.jsxs)(d.table,{children:[(0,i.jsx)(d.thead,{children:(0,i.jsxs)(d.tr,{children:[(0,i.jsx)(d.th,{children:"Thread Name"}),(0,i.jsx)(d.th,{children:"blockIdx.X"}),(0,i.jsx)(d.th,{children:"blockIdx.Y"}),(0,i.jsx)(d.th,{children:"blockIdx.Z"})]})}),(0,i.jsxs)(d.tbody,{children:[(0,i.jsxs)(d.tr,{children:[(0,i.jsx)(d.td,{children:(0,i.jsx)(d.strong,{children:"A"})}),(0,i.jsx)(d.td,{children:"0"}),(0,i.jsx)(d.td,{children:"0"}),(0,i.jsx)(d.td,{children:"0"})]}),(0,i.jsxs)(d.tr,{children:[(0,i.jsx)(d.td,{children:(0,i.jsx)(d.strong,{children:"B"})}),(0,i.jsx)(d.td,{children:"0"}),(0,i.jsx)(d.td,{children:"0"}),(0,i.jsx)(d.td,{children:"0"})]}),(0,i.jsxs)(d.tr,{children:[(0,i.jsx)(d.td,{children:(0,i.jsx)(d.strong,{children:"C"})}),(0,i.jsx)(d.td,{children:"0"}),(0,i.jsx)(d.td,{children:"0"}),(0,i.jsx)(d.td,{children:"0"})]}),(0,i.jsxs)(d.tr,{children:[(0,i.jsx)(d.td,{children:(0,i.jsx)(d.strong,{children:"D"})}),(0,i.jsx)(d.td,{children:"0"}),(0,i.jsx)(d.td,{children:"0"}),(0,i.jsx)(d.td,{children:"0"})]}),(0,i.jsxs)(d.tr,{children:[(0,i.jsx)(d.td,{children:(0,i.jsx)(d.strong,{children:"E"})}),(0,i.jsx)(d.td,{children:"1"}),(0,i.jsx)(d.td,{children:"0"}),(0,i.jsx)(d.td,{children:"0"})]}),(0,i.jsxs)(d.tr,{children:[(0,i.jsx)(d.td,{children:(0,i.jsx)(d.strong,{children:"F"})}),(0,i.jsx)(d.td,{children:"1"}),(0,i.jsx)(d.td,{children:"0"}),(0,i.jsx)(d.td,{children:"0"})]}),(0,i.jsxs)(d.tr,{children:[(0,i.jsx)(d.td,{children:(0,i.jsx)(d.strong,{children:"G"})}),(0,i.jsx)(d.td,{children:"1"}),(0,i.jsx)(d.td,{children:"0"}),(0,i.jsx)(d.td,{children:"0"})]}),(0,i.jsxs)(d.tr,{children:[(0,i.jsx)(d.td,{children:(0,i.jsx)(d.strong,{children:"H"})}),(0,i.jsx)(d.td,{children:"1"}),(0,i.jsx)(d.td,{children:"0"}),(0,i.jsx)(d.td,{children:"0"})]})]})]}),"\n",(0,i.jsxs)(d.p,{children:[(0,i.jsx)(d.strong,{children:"Example-2:"})," consider a 1-D grid with 4 thread block with 4 threads per block as shown below."]}),"\n",(0,i.jsx)(d.p,{children:(0,i.jsx)(d.img,{alt:"threadidx_example3.png",src:n(5897).Z+"",width:"455",height:"179"})}),"\n",(0,i.jsxs)(d.table,{children:[(0,i.jsx)(d.thead,{children:(0,i.jsxs)(d.tr,{children:[(0,i.jsx)(d.th,{children:"Thread Name"}),(0,i.jsx)(d.th,{children:"blockIdx.X"}),(0,i.jsx)(d.th,{children:"blockIdx.Y"}),(0,i.jsx)(d.th,{children:"blockIdx.Z"})]})}),(0,i.jsxs)(d.tbody,{children:[(0,i.jsxs)(d.tr,{children:[(0,i.jsx)(d.td,{children:(0,i.jsx)(d.strong,{children:"P"})}),(0,i.jsx)(d.td,{children:"0"}),(0,i.jsx)(d.td,{children:"0"}),(0,i.jsx)(d.td,{children:"0"})]}),(0,i.jsxs)(d.tr,{children:[(0,i.jsx)(d.td,{children:(0,i.jsx)(d.strong,{children:"Q"})}),(0,i.jsx)(d.td,{children:"0"}),(0,i.jsx)(d.td,{children:"0"}),(0,i.jsx)(d.td,{children:"0"})]}),(0,i.jsxs)(d.tr,{children:[(0,i.jsx)(d.td,{children:(0,i.jsx)(d.strong,{children:"R"})}),(0,i.jsx)(d.td,{children:"1"}),(0,i.jsx)(d.td,{children:"0"}),(0,i.jsx)(d.td,{children:"0"})]}),(0,i.jsxs)(d.tr,{children:[(0,i.jsx)(d.td,{children:(0,i.jsx)(d.strong,{children:"S"})}),(0,i.jsx)(d.td,{children:"1"}),(0,i.jsx)(d.td,{children:"0"}),(0,i.jsx)(d.td,{children:"0"})]}),(0,i.jsxs)(d.tr,{children:[(0,i.jsx)(d.td,{children:(0,i.jsx)(d.strong,{children:"T"})}),(0,i.jsx)(d.td,{children:"0"}),(0,i.jsx)(d.td,{children:"1"}),(0,i.jsx)(d.td,{children:"0"})]}),(0,i.jsxs)(d.tr,{children:[(0,i.jsx)(d.td,{children:(0,i.jsx)(d.strong,{children:"U"})}),(0,i.jsx)(d.td,{children:"0"}),(0,i.jsx)(d.td,{children:"1"}),(0,i.jsx)(d.td,{children:"0"})]}),(0,i.jsxs)(d.tr,{children:[(0,i.jsx)(d.td,{children:(0,i.jsx)(d.strong,{children:"V"})}),(0,i.jsx)(d.td,{children:"1"}),(0,i.jsx)(d.td,{children:"1"}),(0,i.jsx)(d.td,{children:"0"})]}),(0,i.jsxs)(d.tr,{children:[(0,i.jsx)(d.td,{children:(0,i.jsx)(d.strong,{children:"X"})}),(0,i.jsx)(d.td,{children:"1"}),(0,i.jsx)(d.td,{children:"1"}),(0,i.jsx)(d.td,{children:"0"})]})]})]}),"\n",(0,i.jsxs)(d.p,{children:[(0,i.jsx)(d.strong,{children:"Example-3:"})," consider a 1-D grid with 4 thread block with 8 threads per block as shown below."]}),"\n",(0,i.jsx)(d.p,{children:(0,i.jsx)(d.img,{alt:"threadIdx_exmaple4.png",src:n(4335).Z+"",width:"377",height:"253"})}),"\n",(0,i.jsxs)(d.table,{children:[(0,i.jsx)(d.thead,{children:(0,i.jsxs)(d.tr,{children:[(0,i.jsx)(d.th,{children:"Thread Name"}),(0,i.jsx)(d.th,{children:"blockIdx.X"}),(0,i.jsx)(d.th,{children:"blockIdx.Y"}),(0,i.jsx)(d.th,{children:"blockIdx.Z"})]})}),(0,i.jsxs)(d.tbody,{children:[(0,i.jsxs)(d.tr,{children:[(0,i.jsx)(d.td,{children:(0,i.jsx)(d.strong,{children:"P"})}),(0,i.jsx)(d.td,{children:"1"}),(0,i.jsx)(d.td,{children:"0"}),(0,i.jsx)(d.td,{children:"0"})]}),(0,i.jsxs)(d.tr,{children:[(0,i.jsx)(d.td,{children:(0,i.jsx)(d.strong,{children:"Q"})}),(0,i.jsx)(d.td,{children:"1"}),(0,i.jsx)(d.td,{children:"0"}),(0,i.jsx)(d.td,{children:"0"})]}),(0,i.jsxs)(d.tr,{children:[(0,i.jsx)(d.td,{children:(0,i.jsx)(d.strong,{children:"R"})}),(0,i.jsx)(d.td,{children:"0"}),(0,i.jsx)(d.td,{children:"1"}),(0,i.jsx)(d.td,{children:"0"})]}),(0,i.jsxs)(d.tr,{children:[(0,i.jsx)(d.td,{children:(0,i.jsx)(d.strong,{children:"S"})}),(0,i.jsx)(d.td,{children:"0"}),(0,i.jsx)(d.td,{children:"1"}),(0,i.jsx)(d.td,{children:"0"})]}),(0,i.jsxs)(d.tr,{children:[(0,i.jsx)(d.td,{children:(0,i.jsx)(d.strong,{children:"T"})}),(0,i.jsx)(d.td,{children:"1"}),(0,i.jsx)(d.td,{children:"1"}),(0,i.jsx)(d.td,{children:"0"})]}),(0,i.jsxs)(d.tr,{children:[(0,i.jsx)(d.td,{children:(0,i.jsx)(d.strong,{children:"U"})}),(0,i.jsx)(d.td,{children:"1"}),(0,i.jsx)(d.td,{children:"1"}),(0,i.jsx)(d.td,{children:"0"})]}),(0,i.jsxs)(d.tr,{children:[(0,i.jsx)(d.td,{children:(0,i.jsx)(d.strong,{children:"X"})}),(0,i.jsx)(d.td,{children:"0"}),(0,i.jsx)(d.td,{children:"0"}),(0,i.jsx)(d.td,{children:"0"})]}),(0,i.jsxs)(d.tr,{children:[(0,i.jsx)(d.td,{children:(0,i.jsx)(d.strong,{children:"Y"})}),(0,i.jsx)(d.td,{children:"0"}),(0,i.jsx)(d.td,{children:"0"}),(0,i.jsx)(d.td,{children:"0"})]})]})]}),"\n",(0,i.jsx)(d.h2,{id:"blockdim",children:"blockDim"}),"\n",(0,i.jsxs)(d.ul,{children:["\n",(0,i.jsx)(d.li,{children:"The #blockDim variable consist number of threads in each dimension of a thread block. Notice all the thread block in a grid have same block size, so this variable value is same for all the threads in a grid."}),"\n",(0,i.jsx)(d.li,{children:"#blockDim is a #dim3 type variable."}),"\n"]}),"\n",(0,i.jsxs)(d.p,{children:[(0,i.jsx)(d.strong,{children:"Example:"})," Consider the diagram below"]}),"\n",(0,i.jsx)(d.p,{children:(0,i.jsx)(d.img,{alt:"griddim_example.png",src:n(1031).Z+"",width:"569",height:"237"})}),"\n",(0,i.jsxs)(d.ul,{children:["\n",(0,i.jsx)(d.li,{children:"The blockDim.x is going to be 4 and the blockDim.y is going to be 2."}),"\n"]}),"\n",(0,i.jsx)(d.h2,{id:"griddim",children:"gridDim"}),"\n",(0,i.jsxs)(d.ul,{children:["\n",(0,i.jsx)(d.li,{children:"The #gridDim variable consists number of thread blocks in each dimension of a grid."}),"\n",(0,i.jsx)(d.li,{children:"#gridDim is a #dim type variable."}),"\n"]}),"\n",(0,i.jsxs)(d.p,{children:[(0,i.jsx)(d.strong,{children:"Example:"})," Consider the diagram below"]}),"\n",(0,i.jsx)(d.p,{children:(0,i.jsx)(d.img,{alt:"griddim_example.png",src:n(1031).Z+"",width:"569",height:"237"})}),"\n",(0,i.jsxs)(d.ul,{children:["\n",(0,i.jsx)(d.li,{children:"The gridDim.x is going to be 3 and the gridDim.y is going to be 2."}),"\n"]}),"\n",(0,i.jsx)(d.h2,{id:"example-exercise",children:"Example Exercise"}),"\n",(0,i.jsxs)(d.p,{children:[(0,i.jsx)(d.strong,{children:"Exercise-1:"})," The goal of this exercise is to use the the same example in the [[Organization of thread in a CUDA program Part-1#Example Exercise|previous page]] but use the #blockIdx, #blockDim and the #gridDim and observe the output."]}),"\n",(0,i.jsx)(d.pre,{children:(0,i.jsx)(d.code,{className:"language-cpp",children:'#include "cuda_runtime.h"\n#include "device_launch_parameters.h"\n\n\n#include <stdio.h>\n\n//Device Code\n__global__ void print_details() {\n    printf("blockIdx x: % d  y : % d  z : % d \\nblockDim x: % d  y : % d  z : % d\\ngridDim x: % d  y : % d  z : % d ", blockIdx.x, blockIdx.y, blockIdx.z, blockDim.x, blockDim.y, blockDim.z,gridDim.x, gridDim.y, gridDim.z);\n}\n\n//Host code\nint main() {\n\n    int nx, ny;\n\n    nx = 16;\n    ny = 16;\n\n    //kernel launch parameters\n\n    dim3 block(8, 8);\n    dim3 grid(nx/block.x, ny/block.y);\n\n    print_details << <grid, block >> > (); // async call\n    printf("Hello from CPU \\n");\n    cudaDeviceSynchronize();// will make the prgram stall till all the launched kernels have finished execution\n\n\n    cudaDeviceReset();\n    return 0;\n}\n'})}),"\n",(0,i.jsxs)(d.p,{children:[(0,i.jsx)(d.strong,{children:"Exercise-2:"})," lets us try printing value of #threadIdx, #blockIdx, #gridDim variables for 3-D grid which has 4 threads in all X, Y and Z dimension."]})]})}function x(e={}){const{wrapper:d}={...(0,r.a)(),...e.components};return d?(0,i.jsx)(d,{...e,children:(0,i.jsx)(a,{...e})}):a(e)}},5857:(e,d,n)=>{n.d(d,{Z:()=>i});const i=n.p+"assets/images/blockIdx_example1-874c63ec31023ba09bcd5cf5c70b9e08.png"},1031:(e,d,n)=>{n.d(d,{Z:()=>i});const i=n.p+"assets/images/griddim_example-1c995fe77066fe21dc5313534314b88f.png"},4335:(e,d,n)=>{n.d(d,{Z:()=>i});const i=n.p+"assets/images/threadIdx_exmaple4-0627e932bca762925685b9a1571cd5cb.png"},5897:(e,d,n)=>{n.d(d,{Z:()=>i});const i=n.p+"assets/images/threadidx_example3-5ae0d9fa6b7295e93040833b0cb3a1d6.png"},1151:(e,d,n)=>{n.d(d,{Z:()=>l,a:()=>t});var i=n(7294);const r={},s=i.createContext(r);function t(e){const d=i.useContext(s);return i.useMemo((function(){return"function"==typeof e?e(d):{...d,...e}}),[d,e])}function l(e){let d;return d=e.disableParentContext?"function"==typeof e.components?e.components(r):e.components||r:t(e.components),i.createElement(s.Provider,{value:d},e.children)}}}]);